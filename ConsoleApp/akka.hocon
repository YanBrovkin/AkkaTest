akka {
	extensions = ["Akka.Cluster.Tools.Client.ClusterClientReceptionistExtensionProvider, Akka.Cluster.Tools"]
	actor {
		provider = cluster
	}
						
	remote {
		dot-netty.tcp {
				hostname = "127.0.0.1"
				port = 0
			}
	}			

	cluster {
		#will inject this node as a self-seed node at run-time
		seed-nodes = ["akka.tcp://testSystem@127.0.0.1:6055"] 
		roles = ["testrole"]

		sharding{
			role = "testrole"
			state-store-mode = persistence
		}
	persistence{
          journal {
            plugin = "akka.persistence.journal.sql-server"
            sql-server {
                class = "Akka.Persistence.SqlServer.Journal.SqlServerJournal, Akka.Persistence.SqlServer"
                plugin-dispatcher = ""akka.actor.default-dispatcher""
                table-name = EventJournal
                schema-name = dbo
                auto-initialize = on
                connection-string = "Data Source=Y-BROVKIN-M\SQL2016;Initial Catalog=akkatest;Integrated Security=True"
            }
          }
          publish-plugin-commands = on
          snapshot-store {
            plugin = "akka.persistence.snapshot-store.sql-server"
            sql-server {
                class = "Akka.Persistence.SqlServer.Snapshot.SqlServerSnapshotStore, Akka.Persistence.SqlServer"
                plugin-dispatcher = "akka.actor.default-dispatcher"
                table-name = SnapshotStore
                schema-name = dbo
                auto-initialize = on
                connection-string = "Data Source=Y-BROVKIN-M\SQL2016;Initial Catalog=akkatest;Integrated Security=True"
            }
          }
        }
	}
}